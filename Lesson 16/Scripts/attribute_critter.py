# Зверюшка с атрибутами
# Демонстрирует создание атрибутов (полей) объекта и доступ к ним

# Объявление класса Critter

class Critter(object):
    """Виртуальный питомец"""
    def __init__(self, name):
        """Инициализирует объект self с установкой ему значения в атрибуте name
        """
        print("Появилась на свет новая зверюшка! Родители ее назвали", name)
        # сохраним параметр name в атрибуте объекта,
        # чтобы зверёк не забывал как его зовут
        self.name = name

    def __str__(self):
        title = "Объект класса Critter\n"
        title += "имя: " + self.name + "\n"
        return title

    def talk(self):
        """Теперь метод talk() использует атрибут объекта name,
        т.е. зверюшка может разговаривать от своего имени!
        """
        print("Привет. Меня зовут", self.name, "\n")


# Основная часть программы

crit1 = Critter("Бобик")
crit1.talk()

crit2 = Critter("Мурзик")
crit2.talk()

# будет использоваться строковое представление объекта, возвращаемое методом __str__
print("Вывод объекта crit1 на экран:")
print(crit1)

# Обычно стремятся избежать прямого доступа к атрибутам объекта вне объявления 
# класса, но с публичными атрибутами это можно делать легко, применяя точечную нотацию:
print("Прямой доступ к атрибуту crit1.name:")
print(crit1.name)

input("\n\nНажмите Enter, чтобы выйти")
