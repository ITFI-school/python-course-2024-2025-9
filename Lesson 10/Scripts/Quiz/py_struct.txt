Вопросы по структурам данных языка Python
Строки
Есть такая строка/>>>str_var = "AKVA"/Какая из операций изменяет строку в переменной str_var?
>>> str_var[0] = "B"
>>> str_var[:] = " "
>>> str_var.replace("A", "a")
Никакая из вышеперечисленных
4
Существующие строки изменять нельзя. Можно только присвоить измененную строку другой переменной, как в варианте 3./Ну а правильным является вариант 4
Списки
Есть такой список:/>>> temperatures = [-3, 0, 2.5, 4]/Какое выражение даст значение 4?
>>> temperatures[-1]
>>> temperatures[4]
>>> temperatures[3:]
>>> temperatures[3:4]
1
Индексация с отрицательным индексом ведет отсчет с первого справа элемента --> вариант 1 подходит./Варианты 3 и 4 не годятся, т.к. срезы списка возвращают список, даже если в этом списке будет находиться только один элемент
Списки
Есть такой код:/>>> grades = [80, 70, 60, 90]/>>> grades.sort()/>>> grades.insert(1, 95)/На что в итоге ссылается переменная grades?	
[60, 70, 80, 90, 95]
[95, 60, 70, 80, 90]
[60, 95, 80, 90]
[60, 95, 70, 80, 90]
4
Метод list.insert() вставляет элемент в позицию, заданную в первом атрибуте, как бы раздвигая список в этом месте. Позиции отсчитываются, начиная с нулевой. Поэтому вариант 4
Кортежи
Какой способ создать кортеж является недопустимым?
>>> tuple_var= ()
>>> tuple_var= (1)
>>> tuple_var= (1, 2, 3)
>>> tuple_var= (1, "two", 3.0)
>>> tuple_var= (1,)
>>> tuple_var= tuple()
2
Числовое выражение в круглых скобках задает приоритет, но не является кортежем (вариант 2). Кортеж из одного элемента создается по варианту 5
Кортежи
Есть 2 кортежа:/>>> tup1, tup2 = (1,2), (4,3)/Найдите недопустимую операцию:
>>> tup_new= tup1 + tup2
>>> tup_more= tup1 * 3
>>> flag = 2 in tup1
>>> sorted(tup2)
>>> tup1.sort()
>>> list(reversed(tup2))
>>> tup2 = tup2[::-1]
>>> val= tup1[-1]
>>> tup1.index(val)
5
Кортеж - неизменяемый тип данных, поэтому нельзя сортировать кортеж в том же месте, которое выделено ему в памяти (вариант 5)./Но можно получить сортированное представление этого кортежа, чтобы присвоить его другой переменной (варианты 4 и 6)
Функции
Как вернуть из функции несколько значений?
При помощи возврата кортежа
Несколько раз написать return
Создать новый пользовательский тип
В языке Python это невозможно
1
Можно перечислить в операторе return несколько значений через запятую, что означает возврат кортежа с этими значениями, т.е. вариант 1